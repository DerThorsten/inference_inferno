language: cpp

compiler:
    - clang
    - gcc

before_install:
    # boost
    - sudo add-apt-repository ppa:ukplc-team/testing -y 
    - sudo apt-get update -qq 
    - sudo apt-get install -qq python-nose libboost1.49-dev 
    - sudo apt-get install -qq libboost-python1.49-dev libboost-system1.49-dev   libboost-filesystem1.49-dev libboost-test1.49-dev 
    - if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
    # clang 3.4
    - if [ "$CXX" == "clang++" ]; then sudo add-apt-repository -y ppa:h-rayflood/llvm; fi
    - sudo apt-get update -qq
    #
install:
    # g++4.8.1
    - CWD=$(pwd)
    - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.8; fi
    - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8"; fi
    #
install:
    # clang 3.4]
    - CWD=$(pwd)
    - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.4; fi
    - if [ "$CXX" == "clang++" ]; then export CXXFLAGS="-std=c++0x -stdlib=libc++"; fi
    - if [ "$CXX" == "clang++" ]; then svn co --quiet http://llvm.org/svn/llvm-project/libcxx/trunk libcxx; fi

    - if [ "$CXX" == "clang++" ]; then cd libcxx/lib && bash buildit; fi
    - if [ "$CXX" == "clang++" ]; then sudo cp ./libc++.so.1.0 /usr/lib/; fi
    - if [ "$CXX" == "clang++" ]; then sudo mkdir /usr/include/c++/v1; fi
    - if [ "$CXX" == "clang++" ]; then cd .. && sudo cp -r include/* /usr/include/c++/v1/; fi
    - if [ "$CXX" == "clang++" ]; then cd /usr/lib && sudo ln -sf libc++.so.1.0 libc++.so; fi
    - if [ "$CXX" == "clang++" ]; then sudo ln -sf libc++.so.1.0 libc++.so.1 && cd $cwd; fi
    - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.4"; fi
    #
script: 
    # build inferno externals
    - cd $CWD
    - cd inferno-externals
    - mkdir ext_inst_dir
    - cmake .  -DWITH_MPLP=FALSE -DWITH_CONICBUNDLE=FALSE -DWITH_MAXFLOW=FALSE -DWITH_TRWS=TRUE  -DWITH_QPBO=TRUE -DCMAKE_INSTALL_PREFIX=ext_inst_dir
    - make -j4
    - sudo make install
    - cd .. 
    # build inferno itself
    - export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$CWD/ext_inst_dir/lib/inferno_externals/"
    - mkdir inst_dir
    - cmake . -DINFERNO_EXTERNALS_INCLUDE_DIR=$CWD/ext_inst_dir/include/ -DINFERNO_EXTERNALS_LIBRARIES_DIR=$CWD/ext_inst_dir/lib/inferno_externals/ -DCMAKE_INSTALL_PREFIX=inst_dir 
    - cmake . 
    - cmake . -DWITH_TRWS=TRUE  -DWITH_QPBO=TRUE 
    - make -j4
    - ctest -V